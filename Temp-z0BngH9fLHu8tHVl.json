{
  "createdAt": "2025-05-19T17:20:35.200Z",
  "updatedAt": "2025-05-23T18:05:12.835Z",
  "id": "z0BngH9fLHu8tHVl",
  "name": "Temp",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -100,
        -320
      ],
      "id": "4428ceb9-114c-4ab8-8b25-03489bf86263",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "club_summary",
          "mode": "list",
          "cachedResultName": "club_summary"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        120,
        -320
      ],
      "id": "20833916-06c1-4c0a-8300-a1f0a54d199a",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "bJB2Az0HP4yTZASS",
          "name": "Portal v2"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "club_summary",
          "mode": "list",
          "cachedResultName": "club_summary"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "identified_value": "={{ $json.identified_value }}",
            "identified_tickets": "={{ $json.identified_tickets }}",
            "unidentified_value": "={{ $json.unidentified_value }}",
            "unidentified_tickets": "={{ $json.unidentified_tickets }}",
            "total_value": "={{ $json.total_value }}",
            "total_tickets": "={{ $json.total_tickets }}",
            "new_customers": "={{ $json.new_customers }}",
            "total_customers": "={{ $json.total_customers }}",
            "active_customers": "={{ $json.active_customers }}",
            "period": "={{ $json.period }}",
            "unit_id": "={{ $json.unit_id }}",
            "updated_at": "={{ new Date() }}",
            "created_at": "={{ new Date() }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "period",
              "displayName": "period",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "unit_id",
              "displayName": "unit_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "identified_value",
              "displayName": "identified_value",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "identified_tickets",
              "displayName": "identified_tickets",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "unidentified_value",
              "displayName": "unidentified_value",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "unidentified_tickets",
              "displayName": "unidentified_tickets",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "total_value",
              "displayName": "total_value",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "total_tickets",
              "displayName": "total_tickets",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "new_customers",
              "displayName": "new_customers",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "total_customers",
              "displayName": "total_customers",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "active_customers",
              "displayName": "active_customers",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        560,
        -320
      ],
      "id": "7c563d56-a6ee-4473-acfa-0ee575fbee66",
      "name": "Postgres3",
      "credentials": {
        "postgres": {
          "id": "bJB2Az0HP4yTZASS",
          "name": "Portal v2"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH months AS (\n  SELECT generate_series(\n    DATE_TRUNC('month', DATE '2024-01-01'),\n    DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 month',\n    INTERVAL '1 month'\n  ) AS month\n),\nstores AS (\n  SELECT DISTINCT \"unitId\" FROM customers WHERE \"unitId\" IS NOT NULL\n),\nall_months_stores AS (\n  SELECT m.month, s.\"unitId\"\n  FROM months m\n  CROSS JOIN stores s\n),\naccumulated_base_per_store AS (\n  SELECT\n    ams.month,\n    ams.\"unitId\",\n    COUNT(cu.id) AS total_customers_per_store\n  FROM all_months_stores ams\n  LEFT JOIN customers cu\n    ON cu.\"unitId\" = ams.\"unitId\"\n    AND cu.\"createdAt\" < (ams.month + INTERVAL '1 month')\n  GROUP BY ams.month, ams.\"unitId\"\n),\nnew_customers_per_store AS (\n  SELECT \n    DATE_TRUNC('month', \"createdAt\") AS month,\n    \"unitId\",\n    COUNT(*) AS new_customers_in_month\n  FROM customers\n  WHERE \"unitId\" IS NOT NULL\n  GROUP BY month, \"unitId\"\n),\ntickets_summary AS (\n  SELECT\n    DATE_TRUNC('month', c.date) AS period,\n    c.\"unitId\" AS unit_id,\n\n    COALESCE(SUM(cf.value) FILTER (\n      WHERE cu.cpf IS NOT NULL AND c.date >= cu.\"createdAt\"\n    ), 0) AS identified_value,\n    COALESCE(COUNT(c.id) FILTER (\n      WHERE cu.cpf IS NOT NULL AND c.date >= cu.\"createdAt\"\n    ), 0) AS identified_tickets,\n\n    COALESCE(SUM(cf.value) FILTER (\n      WHERE cu.cpf IS NULL OR c.date < cu.\"createdAt\"\n    ), 0) AS unidentified_value,\n    COALESCE(COUNT(c.id) FILTER (\n      WHERE cu.cpf IS NULL OR c.date < cu.\"createdAt\"\n    ), 0) AS unidentified_tickets,\n\n    SUM(cf.value) AS total_value,\n    COUNT(c.id) AS total_tickets,\n\n    c.\"unitId\"\n  FROM coupons c\n  LEFT JOIN customers cu ON c.cpf = cu.cpf\n  INNER JOIN coupons_finishers cf ON cf.\"couponId\" = c.id\n  WHERE c.date >= DATE '2024-01-01'\n    AND c.date < DATE_TRUNC('month', CURRENT_DATE)\n  GROUP BY period, c.\"unitId\"\n),\nactive_customers_per_store AS (\n  SELECT\n    DATE_TRUNC('month', c.date) AS month,\n    c.\"unitId\",\n    COUNT(DISTINCT c.cpf) AS active_customers\n  FROM coupons c\n  WHERE c.date >= DATE '2024-01-01'\n    AND c.date < DATE_TRUNC('month', CURRENT_DATE)\n    AND c.cpf IS NOT NULL\n  GROUP BY month, c.\"unitId\"\n)\nSELECT\n  to_char(ams.month, 'YYYY-MM') AS period,\n  ams.\"unitId\" AS unit_id,\n\n  COALESCE(ts.identified_value, 0) AS identified_value,\n  COALESCE(ts.identified_tickets, 0) AS identified_tickets,\n\n  COALESCE(ts.unidentified_value, 0) AS unidentified_value,\n  COALESCE(ts.unidentified_tickets, 0) AS unidentified_tickets,\n\n  COALESCE(ts.total_value, 0) AS total_value,\n  COALESCE(ts.total_tickets, 0) AS total_tickets,\n\n  COALESCE(nc.new_customers_in_month, 0) AS new_customers,\n  COALESCE(ba.total_customers_per_store, 0) AS total_customers,\n  COALESCE(ac.active_customers, 0) AS active_customers\n\nFROM all_months_stores ams\nLEFT JOIN tickets_summary ts\n  ON ts.period = ams.month\n  AND ts.unit_id = ams.\"unitId\"\nLEFT JOIN new_customers_per_store nc\n  ON nc.month = ams.month\n  AND nc.\"unitId\" = ams.\"unitId\"\nLEFT JOIN accumulated_base_per_store ba\n  ON ba.month = ams.month\n  AND ba.\"unitId\" = ams.\"unitId\"\nLEFT JOIN active_customers_per_store ac\n  ON ac.month = ams.month\n  AND ac.\"unitId\" = ams.\"unitId\"\nORDER BY ams.\"unitId\", period",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        340,
        -320
      ],
      "id": "432e580a-73a6-4782-a0ff-70c60231ac19",
      "name": "Postgres4",
      "credentials": {
        "postgres": {
          "id": "C8DsN3myOq1XZZ8n",
          "name": "CRM"
        }
      }
    }
  ],
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres4": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "c87a206f-5644-493e-aa33-74d8392a54a7",
  "triggerCount": 0,
  "tags": []
}